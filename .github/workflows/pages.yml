name: Deploy to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm install --no-audit --no-fund; fi
      - name: Clear cache and build clean
        run: |
          rm -rf build node_modules/.cache || true
          npm run build
        env:
          GENERATE_SOURCEMAP: false
          CI: false
          BUILD_PATH: build
          PUBLIC_URL: "./"
          REACT_APP_BUILD_TIME: ${{ github.run_number }}-${{ github.sha }}
      - name: Fix asset paths for GitHub Pages
        run: |
          # Fix paths in HTML files - change absolute paths to relative
          find build -name "*.html" -type f -exec sed -i 's|"/static/|"./static/|g' {} \;
          find build -name "*.html" -type f -exec sed -i 's|href="/|href="./|g' {} \;
          find build -name "*.html" -type f -exec sed -i 's|src="/|src="./|g' {} \;
          # Fix paths in asset-manifest.json
          sed -i 's|"/static/|"./static/|g' build/asset-manifest.json
          sed -i 's|"/index.html|"./index.html|g' build/asset-manifest.json
          # Fix paths in manifest.json if it exists
          if [ -f build/manifest.json ]; then
            sed -i 's|"/|"./|g' build/manifest.json
          fi
          echo "Fixed asset paths to be relative"
      - name: Add cache-busting timestamp
        run: |
          timestamp=$(date +%s)
          echo "Cache bust timestamp: $timestamp"
          echo "CACHE_BUST=$timestamp" >> $GITHUB_ENV
      - name: Add 404 fallback for SPA
        run: cp build/index.html build/404.html
      - name: Add cache-busting headers
        run: |
          cat > build/.nojekyll << EOF
          EOF
          # Add a timestamp file to force cache invalidation
          echo "$(date -u +%Y%m%d%H%M%S)" > build/build-timestamp.txt
          # Remove any potential CNAME conflicts
          rm -f build/CNAME
      - name: Show build output
        run: |
          echo "Commit: $GITHUB_SHA"
          echo "Cache bust: $CACHE_BUST"
          ls -la build
          ls -la build/static/js || true
          echo "asset-manifest.json:" && cat build/asset-manifest.json
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: build
          retention-days: 1

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Configure Pages
        uses: actions/configure-pages@v5
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          timeout: 600000
      - name: Trigger cache invalidation
        run: |
          echo "Deployment completed at $(date)"
          echo "Page URL: ${{ steps.deployment.outputs.page_url }}"
          echo "Build completed with hash: $GITHUB_SHA"
